# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will initiate a Veracode Static Analysis Pipeline scan, return a results.json and convert to SARIF for upload as a code scanning alert

name: Veracode Static Analysis Pipeline Scan

on:
  push:
    branches:
    - master
    - release/*
  pull_request:
    # The branches below must be a subset of the branches above
    branches:
    - master
  #schedule:
    #- cron: "0 2 * * 1-5"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-pipeline-scan:
    # The type of runner that the job will run on
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: [ windows-latest ] #ubuntu-latest
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and copies all sources into ZIP file for submitting for analysis. Replace this section with your applications build steps
    - uses: actions/checkout@v3
      with:
        repository: ''

#===============================================================================



#===============================================================================
    # Build the application
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore NuGet packages
      run: nuget restore Verademo-dotnet.sln
    
    - name: Build the Solution
      run: msbuild Verademo-dotnet.sln /p:Configuration=Release
#===============================================================================
    
    #- name: Setup dotNET
      #uses: actions/setup-dotnet@v2
      #with:
        #dotnet-version: 6.*.*
    #- name: Restore dependencies
      #run: dotnet restore
      #working-directory: ./
    #- name: Build
      #run: dotnet build --no-restore #configuration Release
      #working-directory: ./
    #- name: Test
      #run: dotnet test #--no-build --verbosity normal
      #working-directory: ./

#===============================================================================
    # OPTIONAL: If build output is more than a one file
    # Zipping all the code together into single file 
    #- run: zip -r veracode-scan-target.zip .\
#===============================================================================
    #- name: action-build-zip
  # You may pin to the exact commit or the version.
  # uses: byteever/action-build-zip@23d77e1778849e35de1b4e9dbb16d4b64a4714e6
      #uses: byteever/action-build-zip@1
      #with:
    # See byteever/action-zip README.md for more info
        #filename: veracode-scan-target
#===============================================================================
    - name: Zip Release
  # You may pin to the exact commit or the version.
  # uses: TheDoctor0/zip-release@09336613be18a8208dfa66bd57efafd9e2685657
      uses: TheDoctor0/zip-release@0.6.2
      with:
        # Filename for archive
        filename: veracode-scan-target.zip # default is release.zip
        # Base path for archive files
        path: .\ # optional, default is .
        # Working directory before zipping
        #directory: # optional, default is .
        # List of excluded files / directories
        #exclusions: # optional, default is 
        # List of excluded files / directories with recursive wildcards (only applies on Windows with `zip` type)
        #recursive_exclusions: # optional, default is 
        # Tool to use for archiving
        #type: # optional, default is zip
#===============================================================================

    # download the Veracode Static Analysis Pipeline scan jar
    - run: curl --silent --show-error --fail -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - run: unzip -o pipeline-scan-LATEST.zip

    - uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: 'temurin'
    - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file veracode-scan-target.zip
      continue-on-error: true
    - name: Convert pipeline scan output to SARIF format
      id: convert
      uses: veracode/veracode-pipeline-scan-results-to-sarif@ff08ae5b45d5384cb4679932f184c013d34da9be
      with:
        pipeline-results-json: results.json
    - uses: github/codeql-action/upload-sarif@v2
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: veracode-results.sarif
